{
    "components": {
        "queue": {
            "type": "ext",
            "displayname": "CK Elastic Load Balancing V2 Target Group",
            "description": "Deploys an AWS ELBv2 Target Group. Target group defines targets to which a load balancer can route traffic.",
            "cloud": "AWS",
            "ck_plugin_tier": 3,
            "resources": ["AWS::ElasticLoadBalancingV2::TargetGroup"],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "elasticloadbalancing:CreateTargetGroup",
                        "ec2:DescribeInternetGateways",
                        "ec2:DescribeVpcs",
                        "elasticloadbalancing:RemoveTags",
                        "elasticloadbalancing:DescribeTargetGroupAttributes",
                        "elasticloadbalancing:DescribeTags",
                        "elasticloadbalancing:AddTags",
                        "elasticloadbalancing:CreateTargetGroup",
                        "elasticloadbalancing:DescribeTargetGroups",
                        "elasticloadbalancing:DeleteTargetGroup",
                        "elasticloadbalancing:ModifyTargetGroupAttributes",
                        "elasticloadbalancing:ModifyTargetGroup"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "required_properties": ["vpc_id"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the target group."
                    },
                    "vpc_id": {
                        "type": "string",
                        "description": "The VPC ID of the target group."
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port on which the targets are listening.",
                        "default": 443,
                        "common": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol to use for routing traffic to the targets.",
                        "enum": ["HTTP","HTTPS","TCP","TLS","UDP","TCP_UDP","GENEVE"],
                        "default": "HTTPS",
                        "common": true
                    },
                    "protocol_version": {
                        "type": "string",
                        "description": "[HTTP/HTTPS protocol] The protocol version of the target group.",
                        "enum": ["GRPC", "HTTP2", "HTTP1"],
                        "default": "HTTP1"
                    },
                    "target_type": {
                        "type": "string",
                        "description": "The type of the targets that are registered with this target group (e.g. ip, lambda, alb, or instance)",
                        "enum": ["instance", "ip", "lambda", "alb"],
                        "common": true
                    },
                    "ip_address_type": {
                        "type": "string",
                        "description": "The type of IP address used for this target group.",
                        "enum": ["ipv4", "ipv6"]
                    },
                    "health_check_protocol": {
                        "type": "string",
                        "description": "The protocol the load balancer uses when performing health checks on targets.",
                        "enum": ["TCP", "HTTP", "HTTPS"],
                        "default": "HTTPS"
                    },
                    "health_check_port": {
                        "type": "string",
                        "description": "The port the load balancer uses when performing health checks on targets.",
                        "default": "traffic-port"
                    },
                    "health_check_enabled": {
                        "type": "boolean",
                        "description": "Indicates whether health checks are enabled.",
                        "default": true
                    },
                    "health_check_path": {
                        "type": "string",
                        "description": "The destination for health checks on the targets.",
                        "default": "/"
                    },
                    "health_check_interval_seconds": {
                        "type": "integer",
                        "description": "The approximate amount of time, in seconds, between health checks of an individual target.",
                        "minimum": 5,
                        "maximum": 300,
                        "default": 30
                    },
                    "health_check_timeout_seconds": {
                        "type": "integer",
                        "description": "The amount of time, in seconds, during which no response from a target means a failed health check.",
                        "minimum": 2,
                        "maximum": 120,
                        "default": 10
                    },
                    "healthy_threshold_count": {
                        "type": "integer",
                        "description": "The number of consecutive health check successes required before considering a target healthy.",
                        "minimum": 2,
                        "maximum": 10,
                        "default": 5
                    },
                    "unhealthy_threshold_count": {
                        "type": "integer",
                        "description": "The number of consecutive health check failures required before considering a target unhealthy.",
                        "minimum": 2,
                        "maximum": 10,
                        "default": 2
                    },
                    "matcher": {
                        "type": "object",
                        "description": "The HTTP or gRPC codes to use when checking for a successful response from a target.",
                        "default": {"HttpCode": "200,403"},
                        "properties": {
                            "HttpCode": {
                                "type": "string"
                            },
                            "GrpcCode": {
                                "type": "string"
                            }
                        }
                    },
                    "tags": {
                        "type": "object",
                        "description": "The tags to attach to this queue",
                        "common": true
                    }


                }
            },
            "props": {
                "name": {
                    "type": "string",
                    "description": "The name of the target group."
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the target group."
                },
                "vpc_id": {
                    "type": "string",
                    "description": "The VPC ID of the target group."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the targets are listening."
                },
                "load_balancer_arns": {
                    "type": "array",
                    "description": "The Amazon Resource Name (ARN) of the load balancer that routes traffic to this target group. You can use each target group with only one load balancer.",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol to use for routing traffic to the targets."
                },
                "protocol_version": {
                    "type": "string",
                    "description": "[HTTP/HTTPS protocol] The protocol version of the target group."
                },
                "target_type": {
                    "type": "string",
                    "description": "The type of the targets that are registered with this target group (e.g. ip, lambda, alb, or instance)"
                },
                "ip_address_type": {
                    "type": "string",
                    "description": "The type of IP address used for this target group."
                }
            },
            "examples": [
                {
                    "displayname": "FIFO Queue with Tags",
                    "notes": "Pass fifo: true to create a FIFO queue. Pass tags to attach tags to the queue.",
                    "definition": {
                        "type": "&sqs.queue",
                        "fifo": true,
                        "visibility_timeout": 220,
                        "tags": {
                            "foo": "bar"
                        }
                    }
                },
                {
                    "displayname": "Queue with Dead Letter Queue",
                    "notes": "Pass dead_letter_queue_arn and max_count_before_dead_letter to create a queue with a dead letter queue.",
                    "definition": {
                        "type": "&sqs.queue",
                        "dead_letter_queue_arn": "&dl_q:props.arn",
                        "max_count_before_dead_letter": 5
                    }
                }
            ]
        }
    }
}